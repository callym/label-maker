name: ci
on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        docker:
          - image: ghcr.io/callym/label-maker-frontend
            dockerfile: Dockerfile.frontend
          - image: ghcr.io/callym/label-maker-backend
            dockerfile: Dockerfile.backend
        platform:
          - name: linux/amd64
            os: ubuntu-24.04
          - name: linux/arm64/v8
            os: ubuntu-24.04-arm
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform.name }}
          docker_image=${{ matrix.docker.image }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${docker_image//\//-}" >> $GITHUB_ENV
          echo "IMAGE_NAME_RAW=${docker_image}" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.docker.image }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: |
            ${{ runner.os }}-${{ matrix.platform.name }}-${{ matrix.docker.image }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform.name }}-${{ matrix.docker.image }}-buildx-

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform.name }}
          file: ${{ matrix.docker.dockerfile }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ matrix.docker.image }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests/${{ env.IMAGE_NAME }}
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${{ env.IMAGE_NAME }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}-${{ env.IMAGE_NAME }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker:
          - image: ghcr.io/callym/label-maker-frontend
          - image: ghcr.io/callym/label-maker-backend
    needs:
      - build
    steps:
      - name: Prepare
        run: |
          docker_image=${{ matrix.docker.image }}
          echo "IMAGE_NAME=${docker_image//\//-}" >> $GITHUB_ENV
          echo "IMAGE_NAME_RAW=${docker_image}" >> $GITHUB_ENV

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*-${{ env.IMAGE_NAME }}
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.docker.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests/${{ env.IMAGE_NAME }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_NAME_RAW }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME_RAW }}:${{ steps.meta.outputs.version }}
